# Sample workflow for building and deploying a Next.js site to GitHub Pages
# To get started with Next.js see: https://nextjs.org/docs/getting-started
name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Detect package manager
        id: detect-package-manager
        run: |
          echo "manager=npm" >> $GITHUB_OUTPUT
          echo "command=ci" >> $GITHUB_OUTPUT
          echo "runner=npx --no-install" >> $GITHUB_OUTPUT
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          cache-dependency-path: my-app/package-lock.json
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          # We removed static_site_generator: next here 
          # to prevent it from conflicting with the manual basePath 
          # set in my-app/next.config.js.
          pass_none: true # Placeholder to keep 'with' block active if no other options are needed
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: my-app/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('my-app/package-lock.json', 'my-app/yarn.lock') }}-${{ hashFiles('my-app/**/*.[jt]s', 'my-app/**/*.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('my-app/package-lock.json', 'my-app/yarn.lock') }}-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
        working-directory: ./my-app
      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
        working-directory: ./my-app
        # CRITICAL FIX: Inject the base path as an environment variable for the build.
        # This ensures all generated asset URLs are correctly prefixed with /my-portfolio.
        env:
          NEXT_PUBLIC_BASE_PATH: /my-portfolio 
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./my-app/out
          
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
